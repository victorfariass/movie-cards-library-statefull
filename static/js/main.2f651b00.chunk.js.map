{"version":3,"sources":["components/Header.jsx","components/SearchBar.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","SearchBar","this","props","searchText","onSearchTextChange","data-testid","htmlFor","name","type","value","onChange","bookmarkedOnly","onBookmarkedChange","checked","selectedGenre","onSelectedGenreChange","inputText","inputCheckbox","inputSelect","Rating","rating","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","AddMovie","state","genre","handleTitle","bind","handleSubtitle","handleImage","handleStoryline","handleRating","handleGenre","event","setState","target","callback","onClick","preventDefault","handleSubmit","inputTitle","inputSubtitle","inputImage","inputStoryline","inputRating","inputGenre","inputButton","MovieLibrary","handleFilter","handleSearchEvent","handleAddMovie","objectMovie","currentState","moviesToShow","filter","includes","bookmarked","showMovies","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f651b00.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends React.Component {\n  inputText() {\n    const { searchText, onSearchTextChange } = this.props;\n\n    return (\n      <label data-testid=\"text-input-label\" htmlFor=\"imput-text\">\n        Inclui o texto:\n        <input\n          name=\"searchText\"\n          data-testid=\"text-input\"\n          type=\"text\"\n          value={ searchText }\n          onChange={ onSearchTextChange }\n        />\n      </label>\n    );\n  }\n\n  inputCheckbox() {\n    const { bookmarkedOnly, onBookmarkedChange } = this.props;\n\n    return (\n      <label data-testid=\"checkbox-input-label\" htmlFor=\"input-checkbox\">\n        Mostrar somente favoritos\n        <input\n          className=\"fav-check\"\n          name=\"bookmarkedOnly\"\n          data-testid=\"checkbox-input\"\n          type=\"checkbox\"\n          checked={ bookmarkedOnly }\n          onChange={ onBookmarkedChange }\n        />\n      </label>\n    );\n  }\n\n  inputSelect() {\n    const { selectedGenre, onSelectedGenreChange } = this.props;\n\n    return (\n      <label data-testid=\"select-input-label\" htmlFor=\"select-input\">\n        Filtrar por gênero\n        <select\n          name=\"selectedGenre\"\n          data-testid=\"select-input\"\n          value={ selectedGenre }\n          onChange={ onSelectedGenreChange }\n        >\n          <option data-testid=\"select-option\" value=\"\">Todos</option>\n          <option data-testid=\"select-option\" value=\"action\">Ação</option>\n          <option data-testid=\"select-option\" value=\"comedy\">Comédia</option>\n          <option data-testid=\"select-option\" value=\"thriller\">Suspense</option>\n        </select>\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <form data-testid=\"search-bar-form\" className=\"filter-container\">\n        { this.inputText() }\n        { this.inputCheckbox() }\n        { this.inputSelect() }\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">\n          <i className=\"material-icons\">start</i>\n          {rating}\n        </span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number.isRequired };\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    storyline: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    imagePath: PropTypes.string.isRequired,\n    map: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddMovie extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n    this.handleTitle = this.handleTitle.bind(this);\n    this.handleSubtitle = this.handleSubtitle.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleStoryline = this.handleStoryline.bind(this);\n    this.handleRating = this.handleRating.bind(this);\n    this.handleGenre = this.handleGenre.bind(this);\n  }\n\n  handleTitle(event) {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleSubtitle(event) {\n    this.setState({\n      subtitle: event.target.value,\n    });\n  }\n\n  handleImage(event) {\n    this.setState({\n      imagePath: event.target.value,\n    });\n  }\n\n  handleStoryline(event) {\n    this.setState({\n      storyline: event.target.value,\n    });\n  }\n\n  handleRating(event) {\n    this.setState({\n      rating: event.target.value,\n    });\n  }\n\n  handleGenre(event) {\n    this.setState({\n      genre: event.target.value,\n    });\n  }\n\n  handleSubmit(callback) {\n    callback(this.state);\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  inputTitle() {\n    const { title } = this.state;\n\n    return (\n      <label data-testid=\"title-input-label\" htmlFor=\"title-input\">\n        Título\n        <input\n          data-testid=\"title-input\"\n          type=\"text\"\n          value={ title }\n          onChange={ this.handleTitle }\n        />\n      </label>\n    );\n  }\n\n  inputSubtitle() {\n    const { subtitle } = this.state;\n\n    return (\n      <label data-testid=\"subtitle-input-label\" htmlFor=\"subtitle-input\">\n        Subtítulo\n        <input\n          data-testid=\"subtitle-input\"\n          type=\"text\"\n          value={ subtitle }\n          onChange={ this.handleSubtitle }\n        />\n      </label>\n    );\n  }\n\n  inputImage() {\n    const { imagePath } = this.state;\n\n    return (\n      <label data-testid=\"image-input-label\" htmlFor=\"image-input\">\n        Imagem\n        <input\n          data-testid=\"image-input\"\n          type=\"text\"\n          value={ imagePath }\n          onChange={ this.handleImage }\n        />\n      </label>\n    );\n  }\n\n  inputStoryline() {\n    const { storyline } = this.state;\n\n    return (\n      <label data-testid=\"storyline-input-label\" htmlFor=\"storyline-input\">\n        Sinopse\n        <textarea\n          data-testid=\"storyline-input\"\n          value={ storyline }\n          onChange={ this.handleStoryline }\n        />\n      </label>\n    );\n  }\n\n  inputRating() {\n    const { rating } = this.state;\n\n    return (\n      <label data-testid=\"rating-input-label\" htmlFor=\"rating-input\">\n        Avaliação\n        <input\n          data-testid=\"rating-input\"\n          type=\"number\"\n          value={ rating }\n          onChange={ this.handleRating }\n        />\n      </label>\n    );\n  }\n\n  inputGenre() {\n    const { genre } = this.state;\n\n    return (\n      <label data-testid=\"genre-input-label\" htmlFor=\"genre-inpu\">\n        Gênero\n        <select\n          data-testid=\"genre-input\"\n          value={ genre }\n          onChange={ this.handleGenre }\n        >\n          <option value=\"action\" data-testid=\"genre-option\">Ação</option>\n          <option value=\"comedy\" data-testid=\"genre-option\">Comédia</option>\n          <option value=\"thriller\" data-testid=\"genre-option\">Suspense</option>\n        </select>\n      </label>\n    );\n  }\n\n  inputButton(onClick) {\n    return (\n      <button\n        type=\"submit\"\n        data-testid=\"send-button\"\n        onClick={ (event) => { event.preventDefault(); this.handleSubmit(onClick); } }\n      >\n        Adicionar filme\n      </button>\n    );\n  }\n\n  render() {\n    const { onClick } = this.props;\n    return (\n      <form data-testid=\"add-movie-form\" className=\"add-container\">\n        { this.inputTitle() }\n        { this.inputSubtitle() }\n        { this.inputImage() }\n        { this.inputStoryline() }\n        { this.inputRating() }\n        { this.inputGenre() }\n        { this.inputButton(onClick) }\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: '',\n      selectedGenre: '',\n      movies,\n    };\n\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleSearchEvent = this.handleSearchEvent.bind(this);\n    this.handleAddMovie = this.handleAddMovie.bind(this);\n  }\n\n  handleSearchEvent({ target }) {\n    this.setState({\n      [target.name]: target.type === 'checkbox' ? target.checked : target.value,\n    });\n  }\n\n  handleAddMovie(objectMovie) {\n    this.setState((currentState) => ({\n      movies: [...currentState.movies, objectMovie],\n    }));\n  }\n\n  handleFilter(movies) {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    let moviesToShow = movies\n      .filter((movie) => movie.genre.includes(selectedGenre))\n      .filter((movie) => movie.title.includes(searchText)\n        || movie.subtitle.includes(searchText)\n        || movie.storyline.includes(searchText));\n    moviesToShow = !bookmarkedOnly\n      ? moviesToShow\n      : moviesToShow.filter((movie) => movie.bookmarked);\n\n    return moviesToShow;\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, movies, selectedGenre } = this.state;\n    const showMovies = this.handleFilter(movies);\n    return (\n      <main>\n        <SearchBar\n          searchText={ searchText }\n          bookmarkedOnly={ bookmarkedOnly }\n          selectedGenre={ selectedGenre }\n          onSearchTextChange={ this.handleSearchEvent }\n          onBookmarkedChange={ this.handleSearchEvent }\n          onSelectedGenreChange={ this.handleSearchEvent }\n        />\n        <MovieList movies={ showMovies } />\n        <AddMovie onClick={ this.handleAddMovie } />\n      </main>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}